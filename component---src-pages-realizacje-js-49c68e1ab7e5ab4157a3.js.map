{"version":3,"sources":["webpack:///./src/components/IntroImage.js","webpack:///./src/assets/images/realizacje/main.jpg","webpack:///./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack:///./src/components/Overlay.js","webpack:///./src/components/GalleriesPicker.js","webpack:///./src/pages/realizacje.js"],"names":["IntroImage","props","className","style","backgroundImage","image","backgroundPosition","opacity","class","title","subTitle","module","exports","_objectDestructuringEmpty","obj","TypeError","Overlay","backgroundColor","color","defaultProps","GalleriesPicker","imagesData","useStaticQuery","galleries","childImageSharp","fluid","srcWebp","name","slug","map","gallery","to","Realizations","data","site","siteMetadata","siteUrl","GalleryPickerImg"],"mappings":"oHAAA,mCAoBeA,IAjBI,SAACC,GAChB,OACI,yBAAKC,UAAS,eACV,yBAAKA,UAAW,eAAgBC,MAAO,CAAEC,gBAAgB,OAAQH,EAAMI,MAAf,IAAyBC,mBAAoBL,EAAMK,sBAC3G,yBAAKJ,UAAW,UAAWC,MAAO,CAAEI,QAAS,OAC7C,yBAAKL,UAAW,2BACZ,yBAAKA,UAAW,iBACZ,yBAAKA,UAAW,SAAS,wBAAIM,MAAO,aAAcP,EAAMQ,QACvDR,EAAMS,UACH,yBAAKR,UAAW,aAAa,8BAAOD,EAAMS,gB,uBCZlEC,EAAOC,QAAU,IAA0B,oD,oCCA5B,SAASC,EAA0BC,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIC,UAAU,gCADvC,mC,4KCGMC,G,oBAAU,SAACf,GACb,OACI,yBAAKC,UAAS,oBAAuBC,MAAO,CAACI,QAASN,EAAMM,QAASU,gBAAiBhB,EAAMiB,WAIpGF,EAAQG,aAAe,CACnBD,MAAO,SAGIF,QCqEAI,EA7ES,WACpB,IAAMC,EAAaC,yBAAe,cAuC5BC,EAAY,CAAC,CACflB,MAAOgB,EAAU,WAAeG,gBAAgBC,MAAMC,QACtDC,KAAM,UACNC,KAAM,WACP,CACCvB,MAAOgB,EAAU,YAAgBG,gBAAgBC,MAAMC,QACvDC,KAAM,WACNC,KAAM,YACP,CACCvB,MAAOgB,EAAU,SAAaG,gBAAgBC,MAAMC,QACpDC,KAAM,oBACNC,KAAM,mBACP,CACCvB,MAAOgB,EAAU,QAAYG,gBAAgBC,MAAMC,QACnDC,KAAM,OACNC,KAAM,SAGV,OACI,yBAAK1B,UAAS,8BACTqB,EAAUM,KAAI,SAAAC,GAAO,OAClB,yBAAK5B,UAAW,gBACZ,kBAAC,OAAD,CAAM6B,GAAE,eAAiBD,EAAQF,MAC7B,yBAAK1B,UAAW,wBACZ,yBAAKA,UAAW,eAAgBC,MAAO,CAACC,gBAAgB,OAAQ0B,EAAQzB,MAAjB,OACvD,kBAAC,EAAD,CAASE,QAAS,KAClB,yBAAKL,UAAW,gBACZ,wBAAIA,UAAW,aAAc4B,EAAQH,e,qBCpCtDK,UA5BM,SAAC,GAAQ,eAC1B,IAAMC,EAAOX,yBAAe,cAkB5B,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKb,MAAM,aAAaJ,MAAK,GAAK4B,EAAKC,KAAKC,aAAaC,QAAUC,MACnE,kBAACrC,EAAA,EAAD,CAAYK,MAAO4B,EAAI,QAAYT,gBAAgBC,MAAMC,QAASpB,mBAAoB,aAAcG,MAAO,mBAAoBC,SAAU,8BACzI,kBAAC,EAAD","file":"component---src-pages-realizacje-js-49c68e1ab7e5ab4157a3.js","sourcesContent":["import React from 'react'\nimport './IntroImage.scss'\n\nconst IntroImage = (props) => {\n    return (\n        <div className={`intro-image`}>\n            <div className={'image-holder'} style={{ backgroundImage: `url(${props.image})`, backgroundPosition: props.backgroundPosition }}/>\n            <div className={'overlay'} style={{ opacity: 0.42 }}/>\n            <div className={'title-element-container'}>\n                <div className={'title-element'}>\n                    <div className={'title'}><h1 class={'no-margin'}>{props.title}</h1></div>\n                    {props.subTitle && (\n                        <div className={'sub-title'}><span>{props.subTitle}</span></div>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IntroImage\n","module.exports = __webpack_public_path__ + \"static/main-eb09192712501107195459ee7285c87f.jpg\";","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\nimport './Overlay.scss';\n\nconst Overlay = (props) => {\n    return (\n        <div className={`overlay-component`} style={{opacity: props.opacity, backgroundColor: props.color}} />\n    );\n};\n\nOverlay.defaultProps = {\n    color: 'black',\n};\n\nexport default Overlay;\n","import React from 'react';\nimport {Link, useStaticQuery} from \"gatsby\";\nimport './GalleriesPicker.scss';\nimport Overlay from \"./Overlay\";\n\nconst GalleriesPicker = () => {\n    const imagesData = useStaticQuery(graphql`\n        fragment ImageFields on ImageSharpFluid {\n          srcWebp\n          maxHeight: presentationHeight\n          maxWidth: presentationWidth\n        }\n        \n        query {\n          kuchniaImg: file(relativePath: {eq: \"images/realizacje/kuchnie-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          lazienkaImg: file(relativePath: {eq: \"images/realizacje/lazienki-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          inneImg: file(relativePath: {eq: \"images/realizacje/inne-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          szafaImg: file(relativePath: {eq: \"images/realizacje/szafy-garderoby-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n        }\n    `);\n\n    const galleries = [{\n        image: imagesData['kuchniaImg'].childImageSharp.fluid.srcWebp,\n        name: 'Kuchnie',\n        slug: 'kuchnie',\n    }, {\n        image: imagesData['lazienkaImg'].childImageSharp.fluid.srcWebp,\n        name: 'Łazienki',\n        slug: 'lazienki',\n    }, {\n        image: imagesData['szafaImg'].childImageSharp.fluid.srcWebp,\n        name: 'Szafy I Garderoby',\n        slug: 'szafy-garderoby',\n    }, {\n        image: imagesData['inneImg'].childImageSharp.fluid.srcWebp,\n        name: 'Inne',\n        slug: 'inne',\n    }];\n\n    return (\n        <div className={`galleries-picker container`}>\n            {galleries.map(gallery => (\n                <div className={'gallery-item'}>\n                    <Link to={`/realizacje/${gallery.slug}`}>\n                        <div className={'gallery-item-wrapper'}>\n                            <div className={'image-holder'} style={{backgroundImage: `url(${gallery.image})`}} />\n                            <Overlay opacity={0.2}/>\n                            <div className={'gallery-name'}>\n                                <h3 className={'no-margin'}>{gallery.name}</h3>\n                            </div>\n                        </div>\n                    </Link>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default GalleriesPicker;\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport IntroImage from \"../components/IntroImage\";\nimport GalleriesPicker from \"../components/GalleriesPicker\";\nimport GalleryPickerImg from '../assets/images/realizacje/main.jpg'\nimport {useStaticQuery} from \"gatsby\";\n\nconst Realizations = ({}) => {\n    const data = useStaticQuery(graphql`        \n        query {\n          site {\n            siteMetadata {\n              siteUrl\n            }\n          }\n          mainImg: file(relativePath: {eq: \"images/realizacje/main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                srcWebp\n                maxHeight: presentationHeight\n                maxWidth: presentationWidth\n              }\n            }\n          }\n        }\n    `);\n    return (\n        <Layout>\n            <SEO title=\"Realizacje\" image={`${data.site.siteMetadata.siteUrl}${GalleryPickerImg}`} />\n            <IntroImage image={data['mainImg'].childImageSharp.fluid.srcWebp} backgroundPosition={'center 20%'} title={'Nasze realizacje'} subTitle={'Sprawdź nasze realizacje!'}/>\n            <GalleriesPicker />\n        </Layout>\n    )\n}\n\nexport default Realizations;"],"sourceRoot":""}