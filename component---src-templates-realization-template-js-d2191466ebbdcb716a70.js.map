{"version":3,"sources":["webpack:///./src/components/IntroImage.js","webpack:///./src/components/GridGallery.js","webpack:///./src/templates/RealizationTemplate.js"],"names":["IntroImage","props","React","createElement","className","style","backgroundImage","image","backgroundPosition","opacity","class","title","subTitle","GridGallery","mainRef","setMainRef","useState","subRef","setSubRef","settingsMain","dots","fade","infinite","speed","autoplaySpeed","autoplay","pauseOnHover","asNavFor","lazyLoad","settingsSub","slidesToShow","swipeToSlide","focusOnSelect","responsive","breakpoint","settings","images","sort","a","b","full","originalName","localeCompare","Slider","Object","assign","ref","slider","map","key","maxHeight","maxWidth","srcWebp","preview","RealizationTemplate","_React$Component","apply","arguments","_inheritsLoose","prototype","render","name","introImage","this","pathContext","data","Layout","SEO","site","siteMetadata","siteUrl","src","Component"],"mappings":"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","file":"component---src-templates-realization-template-js-d2191466ebbdcb716a70.js","sourcesContent":["import React from 'react'\nimport './IntroImage.scss'\n\nconst IntroImage = (props) => {\n    return (\n        <div className={`intro-image`}>\n            <div className={'image-holder'} style={{ backgroundImage: `url(${props.image})`, backgroundPosition: props.backgroundPosition }}/>\n            <div className={'overlay'} style={{ opacity: 0.42 }}/>\n            <div className={'title-element-container'}>\n                <div className={'title-element'}>\n                    <div className={'title'}><h1 class={'no-margin'}>{props.title}</h1></div>\n                    {props.subTitle && (\n                        <div className={'sub-title'}><span>{props.subTitle}</span></div>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IntroImage\n","import './GridGallery.scss';\nimport Slider from \"react-slick\";\nimport React, { useState } from \"react\";\n\nconst GridGallery = (props) => {\n    const [mainRef, setMainRef] = useState(null);\n    const [subRef, setSubRef] = useState(null);\n    const settingsMain = {\n        dots: false,\n        fade: true,\n        infinite: true,\n        speed: 800,\n        autoplaySpeed: 5000,\n        autoplay: false,\n        pauseOnHover: true,\n        asNavFor: subRef,\n        lazyLoad: 'ondemand',\n    };\n    const settingsSub = {\n        dots: false,\n        infinite: true,\n        speed: 800,\n        slidesToShow: 8,\n        swipeToSlide: true,\n        focusOnSelect: true,\n        asNavFor: mainRef,\n        lazyLoad: 'ondemand',\n        responsive: [\n            {\n                breakpoint: 768,\n                settings: {\n                    slidesToShow: 3,\n                }\n            },\n        ]\n    };\n    const images = props.images.sort((a, b) => {\n        return a.full.originalName.localeCompare(b.full.originalName);\n    });\n\n    return (\n        <div className={'grid-gallery-component container'}>\n            <div className={'grid-gallery-wrapper'}>\n                <div className={'main'}>\n                    <Slider ref={slider => setMainRef(slider)} {...settingsMain}>\n                        {images.map((image, key) => (\n                            <div className={`image-item ${image.full.maxHeight > image.full.maxWidth ? 'contain': ''}`} key={key}>\n                                <div className={'image-holder'} style={{backgroundImage: `url(${image.full.srcWebp})`}} />\n                            </div>\n                        ))}\n                    </Slider>\n                </div>\n                <div className={'sub'}>\n                    <Slider ref={slider => setSubRef(slider)} {...settingsSub}>\n                        {images.map((image, key) => (\n                            <div className={`image-item ${image.preview.maxHeight > image.preview.maxWidth ? 'contain': ''}`} key={key}>\n                                <div className={'image-holder'} style={{backgroundImage: `url(${image.preview.srcWebp})`}} />\n                            </div>\n                        ))}\n                    </Slider>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GridGallery;\n","import React from 'react'\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport IntroImage from \"../components/IntroImage\";\nimport GridGallery from \"../components/GridGallery\";\nimport './RealizationTemplate.scss';\n\nexport default class RealizationTemplate extends React.Component {\n  render() {\n    const {name, introImage, images} = this.props.pathContext;\n    const data = this.props.data;\n\n    return <Layout>\n      <SEO title={`Realizacje: ${name}`} image={`${data.site.siteMetadata.siteUrl}${images[0].full.src}`} />\n      <div className={'realization-template'}>\n        <IntroImage image={introImage} title={name}/>\n        <div className={'content-wrapper'}>\n          <GridGallery images={images}/>\n        </div>\n      </div>\n    </Layout>\n  }\n}\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`"],"sourceRoot":""}