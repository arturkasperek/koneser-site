{"version":3,"sources":["webpack:///./src/components/FullImageGallery.js","webpack:///./src/components/About.js","webpack:///./src/components/Button.js","webpack:///./src/components/ImageAndTextGrid.js","webpack:///./src/pages/index.js","webpack:///./src/assets/images/realizacje/kuchnie-main.jpg"],"names":["FullImageGallery","_ref","children","settings","dots","fade","infinite","speed","autoplaySpeed","autoplay","pauseOnHover","imagesData","useStaticQuery","images","image","childImageSharp","fluid","srcWebp","name","slug","React","createElement","className","length","Slider","map","i","key","style","backgroundImage","opacity","About","imageData","aboutImg","Button","props","type","Link","to","items","title","description","imageOnRight","index","cn","fadeInLeft","fadeInRight","IndexPage","data","Layout","SEO","site","siteMetadata","siteUrl","KuchniaImg","ImageAndTextGrid","module","exports"],"mappings":"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","file":"component---src-pages-index-js-a42fd6dd4ef6575f245f.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery } from 'gatsby';\nimport Slider from \"react-slick\";\nimport './FullImageGallery.scss';\n\nconst FullImageGallery = ({children}) => {\n    const settings = {\n        dots: false,\n        fade: true,\n        infinite: true,\n        speed: 800,\n        autoplaySpeed: 5000,\n        autoplay: true,\n        pauseOnHover: false,\n    };\n    const imagesData = useStaticQuery(graphql`\n        fragment ImageFields on ImageSharpFluid {\n          srcWebp\n          maxHeight: presentationHeight\n          maxWidth: presentationWidth\n        }\n        \n        query {\n          kuchniaImg: file(relativePath: {eq: \"images/realizacje/kuchnie-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          lazienkaImg: file(relativePath: {eq: \"images/realizacje/lazienki-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          inneImg: file(relativePath: {eq: \"images/realizacje/inne-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          szafaImg: file(relativePath: {eq: \"images/realizacje/szafy-garderoby-main.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n        }\n    `);\n\n    const images = [{\n        image: imagesData['kuchniaImg'].childImageSharp.fluid.srcWebp,\n        name: 'Kuchnie',\n        slug: 'kuchnie',\n    }, {\n        image: imagesData['lazienkaImg'].childImageSharp.fluid.srcWebp,\n        name: 'Łazienki',\n        slug: 'lazienki',\n    }, {\n        image: imagesData['szafaImg'].childImageSharp.fluid.srcWebp,\n        name: 'Szafy I Garderoby',\n        slug: 'szafy-garderoby',\n    }, {\n        image: imagesData['inneImg'].childImageSharp.fluid.srcWebp,\n        name: 'Inne',\n        slug: 'inne',\n    }];\n\n    return (\n        <div className={'full-image-gallery'}>\n            {!!images.length && (\n                <Slider {...settings}>\n                    {images.map((i, key) => (\n                        <div className={'image-item'} key={key}>\n                            <div className={'image-holder'} style={{backgroundImage: `url(${i.image})`}} />\n                            <div className={'overlay'} style={{opacity: 0.42}} />\n                            <div className={'content-holder'}>\n                                <div className={'container'}>\n                                    <div className={'content-container'}>\n                                        <div className={'title'}>\n                                            <h1>{i.name}</h1>\n                                        </div>\n                                        <div className={'content-child-item'}>\n                                            {children}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </Slider>\n            )}\n        </div>\n    );\n};\n\nexport default FullImageGallery;\n","import React from 'react';\nimport './About.scss';\nimport {useStaticQuery} from \"gatsby\";\n\nconst About = ({}) => {\n    const imageData = useStaticQuery(graphql`        \n        query {\n          aboutImg: file(relativePath: {eq: \"images/homepage/about.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                srcWebp\n                maxHeight: presentationHeight\n                maxWidth: presentationWidth\n              }\n            }\n          }\n        }\n    `);\n    return (\n        <div className={'about-home'}>\n            <div className={'container'}>\n                <div className={'content-wrapper'}>\n                    <div className={'left'}>\n                        <div className={'left-wrapper'}>\n                            <div className={'image-wrapper'} style={{backgroundImage: `url(${imageData.aboutImg.childImageSharp.fluid.srcWebp})`}}/>\n                        </div>\n                    </div>\n                    <div className={'right'}>\n                        <div className={'title-wrapper'}>\n                            <h3>O Koneserze</h3>\n                        </div>\n                        <div className={'content'}>\n                            <p>Firma „Koneser” działa od 2006 roku i specjalizuje się w produkcji mebli na zamówienie. Działamy przede wszystkim na rynku lokalnym tj. Zawiercie, Myszków i okolice, ale nie unikamy również zamówień z odleglejszych miejscowośći. Z naszych mebli korzystają klienci z Katowic, Częstochowy, Krakowa i itd.</p>\n                            <p>Bazujemy przede wszystkim na klientach z „polecenia”. Nie posiadamy stałej ekspozycji z naszymi produktami, bo z jednej strony ciągle zmieniające się trendy i nowości w branży wymuszałyby częste zmiany wystawy, a z drugiej nakłady finansowe związane  z prowadzeniem takowej wolimy przeznaczać na rozwój parku maszynowego i produkcji. Ponadto jesteśmy w stanie dzięki temu zaoferować atrakcyjniejsze ceny.</p>\n                            <p>Głównymi kierunkami naszej działalności jest produkcja mebli kuchennych oraz szaf z drzwiami przesuwnymi. Nie unikamy jednak żadnych nietypowych zamówień i wykonujemy również meble do salonu, sypialni czy łazienki.</p>\n                            <p>Jako naszą główną dewizę uznajemy jakość i terminowość naszych realizacji przy zachowaniu atrakcyjnej ceny.</p>\n                        </div>\n                        <div className={'bottom handwritten'}>Michał Kasperek</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './Button.scss';\n\nconst Button = (props) => {\n    return (\n        <div className={`button-element ${props.type}`}>\n            <Link to={props.to}>\n                <div className={'button-wrapper'}>\n                    {props.children}\n                </div>\n            </Link>\n        </div>\n    );\n};\n\nexport default Button;\n","import * as React from 'react';\nimport cn from 'classnames';\nimport './ImageAndTextGrid.scss';\nimport {useStaticQuery} from \"gatsby\";\n\nexport default ({}) => {\n  const imagesData = useStaticQuery(graphql`\n        fragment ImageFields on ImageSharpFluid {\n          srcWebp\n          maxHeight: presentationHeight\n          maxWidth: presentationWidth\n        }\n        \n        query {\n          pomiarImg: file(relativePath: {eq: \"images/homepage/pomiar.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          szkicImg: file(relativePath: {eq: \"images/homepage/szkic.png\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          wycenaImg: file(relativePath: {eq: \"images/homepage/wycena.webp\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n          umowaImg: file(relativePath: {eq: \"images/homepage/umowa.jpg\"}) {\n            childImageSharp {\n              fluid(maxWidth: 2000, quality: 95) {\n                ...ImageFields\n              }\n            }\n          }\n        }\n    `);\n\n  const items = [{\n    title: 'Pomiar',\n    description: 'Osobisty pomiar  jest konieczny ze względu na ograniczenia budowlane istniejące w gotowych budynkach (krzywizny ścian, umiejscowienie okien, drzwi, mediów itp.). Do wykonania  wstępnego pomiaru konieczny jest dostęp do ścian, oświetlenie i ewentualne informacje na temat planowanych przyłączy, instalacji itd.',\n    image: imagesData['pomiarImg'].childImageSharp.fluid.srcWebp,\n    imageOnRight: false,\n  }, {\n    title: 'Projekt',\n    description: 'Na podstawie wcześniejszych założeń, w ciągu kilku dni przygotowujemy projekt komputerowy z wizualizacją. Projekt może być przygotowany w kilku wariantach (np. różne ustawienie szafek, kolorystyka).',\n    image: imagesData['szkicImg'].childImageSharp.fluid.srcWebp,\n    imageOnRight: true,\n  }, {\n    title: 'Wycena',\n    description: 'Po zaakceptowaniu projektu przygotowujemy dla Państwa indywidualną wycenę mebli. Wycena ta obejmuje wykonanie mebli z uzgodnionych materiałów i z ustalonym wyposażeniem (np. kosze cargo, kosze na odpady, segregatory, oświetlenie, uchwyty). W cenie mebli ujęte są również ich transport, wniesienie i montaż, wraz z oprawieniem  sprzętu AGD.',\n    image: imagesData['wycenaImg'].childImageSharp.fluid.srcWebp,\n    imageOnRight: false,\n  }, {\n    title: 'Umowa',\n    description: 'Jeżeli dojdziemy do porozumienia w kwestiach finansowych to spisujemy umowę o wykonanie mebli na zamówienie. Wyszczególnione są w niej podstawowe założenia dotyczące rodzaju materiałów i okuć uzgodnionych w projekcie oraz wartość zamówienia i termin realizacji.',\n    image: imagesData['umowaImg'].childImageSharp.fluid.srcWebp,\n    imageOnRight: true,\n  }];\n  return (\n      <div className={'image-and-text-grid'}>\n        <div className={'items-container'}>\n          {items.map((i, index) => (\n              <div key={index} className={cn('item container', { 'image-on-right': i.imageOnRight })}>\n                <div className={cn('image-wrapper', { fadeInLeft: !i.imageOnRight, fadeInRight: i.imageOnRight })}>\n                  <div className={'image-holder'} style={{backgroundImage: `url(${i.image})`}} />\n                </div>\n                <div className={'content-wrapper'}>\n                  <h3 className={'fadeInUp title'}>\n                    {i.title}\n                  </h3>\n                  <div className={'description-holder fadeInUp'}>\n                    {i.description}\n                  </div>\n                </div>\n              </div>\n          ))}\n        </div>\n      </div>\n  );\n};\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport FullImageGallery from '../components/FullImageGallery';\nimport About from '../components/About';\nimport Button from \"../components/Button\";\nimport ImageAndTextGrid from \"../components/ImageAndTextGrid\";\n\nimport KuchniaImg from '../assets/images/realizacje/kuchnie-main.jpg'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Strona Domowa\" image={`${data.site.siteMetadata.siteUrl}${KuchniaImg}`} />\n    <FullImageGallery>\n      <div>\n          <Button type={'primary'} to={'/realizacje'}>\n            Sprawdź realizacje\n          </Button>\n      </div>\n    </FullImageGallery>\n    <About />\n    <div className={'container'}>\n      <h2 className={'main-title'}>Jak wygląda zamówienie ?</h2>\n    </div>\n    <ImageAndTextGrid />\n  </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`","module.exports = __webpack_public_path__ + \"static/kuchnie-main-ddedc039481b84f3a6d23566f25a64e2.jpg\";"],"sourceRoot":""}